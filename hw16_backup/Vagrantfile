# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|

  config.vm.define "backup" do |backup|
    backup.vm.box = "centos/7"
    backup.vm.hostname = 'backup'

    backup.vm.network :private_network, ip: "192.168.11.11"
    backup.vm.network :forwarded_port, guest: 22, host: 2200, id: "ssh"


    backup.vm.provider :virtualbox do |v|
      v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
      v.customize ["modifyvm", :id, "--cpus", 4]
      v.customize ["modifyvm", :id, "--memory", 512]
      v.customize ["modifyvm", :id, "--name", "backup"]
    end
    backup.vm.provision "shell", inline: <<-SHELL
      useradd -m borg
      mkdir ~borg/.ssh
      cp /vagrant/.ssh/authorized_keys ~borg/.ssh
      chown -R borg:borg ~borg/.ssh
      yum install -y nano epel-release
      yum install -y borgbackup
      SHELL
  end

  config.vm.define "server" do |server|
    server.vm.box = "centos/7"
    server.vm.hostname = 'server'

    server.vm.network :private_network, ip: "192.168.11.111"
    server.vm.network :forwarded_port, guest: 22, host: 2222, id: "ssh"

    server.vm.provider :virtualbox do |v|
      v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
      v.customize ["modifyvm", :id, "--cpus", 4]
      v.customize ["modifyvm", :id, "--memory", 512]
      v.customize ["modifyvm", :id, "--name", "server"]
    end
    server.vm.provision "shell", inline: <<-SHELL
      mkdir ~root/.ssh
      cp /vagrant/.ssh/id_rsa ~root/.ssh
      chmod 600 ~root/.ssh/id_rsa
      yum install -y nano epel-release
      yum install -y borgbackup
      ssh-keyscan -H 192.168.11.11 >> ~root/.ssh/known_hosts
      cp /vagrant/borg_backup.sh /opt
      chmod +x /opt/borg_backup.sh
      cp /vagrant/root /var/spool/cron
      export BORG_PASSPHRASE=Qwerty1234
      echo "------------------------------------------------------------------------------" >>/var/log/borg.log
      echo "------------------------------------------------------------------------------" >>/var/log/borg.log
      echo "$(date --iso-8601=seconds) BORGBACKUP INIT" >>/var/log/borg.log
      echo "------------------------------------------------------------------------------" >>/var/log/borg.log
      borg init -e repokey borg@192.168.11.11:BACKUP 2>>/var/log/borg.log
      echo "------------------------------------------------------------------------------" >>/var/log/borg.log
      echo "DONE" >>/var/log/borg.log
      systemctl reload crond
      SHELL
  end
end
